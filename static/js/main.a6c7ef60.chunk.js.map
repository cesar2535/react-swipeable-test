{"version":3,"sources":["components/Slider.module.scss","components/Card.module.scss","components/Card.js","components/Slider.js","layouts/App.js","serviceWorker.js","index.js"],"names":["module","exports","base","slider-container","Card","_ref","id","react_default","a","createElement","className","styles","calculatePercentage","numerator","denominator","getChildrenBounding","props","index","start","before","getBoundingStart","after","children","len","React","Children","count","end","getBoundingEnd","setPosYFromPos","state","assoc","pos","getIndexTransformer","ifElse","anyPass","velocity","_ref2","percentageDeltaY","cond","propEq","always","inc","dec","T","identity","Slider","posY","indexStart","indexEnd","onTransition","updatePosition","_this","setState","handleSwiping","data","onSwitching","dir","deltaY","swipeable","clientHeight","handleSwiped","absY","transformer","Object","objectSpread","transform","evolve","setNextState","compose","handleTransitionEnd","_this$state","onTransitionEnd","onChangeIndex","prevProps","prevState","this","nextStateIdx","hasTransition","arguments","length","undefined","concat","transition","_this2","_this$state2","style","getContainerStyle","list","toArray","slice","es","innerRef","ref","onSwiped","onSwiping","nextProps","_getChildrenBounding","_getChildrenBounding2","slicedToArray","beforeLen","afterLen","PureComponent","defaultProps","App","handleChange","nextIdx","console","log","renderCard","val","idx","components_Card","key","components_Slider","map","href","target","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_layouts_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6c7ef60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Slider_base__2hVG0\",\"slider-container\":\"Slider_slider-container__28qDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Card_base__338SU\"};","import React from 'react';\nimport styles from './Card.module.scss';\n\nconst Card = ({ id }) => {\n  return <div className={styles['base']}>Card {id}</div>;\n};\n\nexport default Card;\n","import React from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport {\n  cond,\n  propEq,\n  inc,\n  dec,\n  identity,\n  always,\n  T,\n  evolve,\n  anyPass,\n  ifElse,\n  assoc,\n  compose\n} from 'ramda';\nimport styles from './Slider.module.scss';\n\nconst calculatePercentage = (numerator, denominator) =>\n  (numerator / denominator) * 100;\n\nconst getBoundingStart = props => {\n  const { index, before } = props;\n  let start = before;\n\n  while (start > index) {\n    start = start - 1;\n  }\n\n  return start;\n};\n\nconst getBoundingEnd = props => {\n  const { index, after, children } = props;\n  const len = React.Children.count(children);\n  let end = after;\n\n  while (index + end > len) {\n    end--;\n  }\n\n  return end;\n};\n\nconst getChildrenBounding = props => {\n  const start = getBoundingStart(props);\n  const end = getBoundingEnd(props);\n  return [start, end];\n};\n\nconst isVelocityPass = ({ velocity }) => velocity > 0.5;\nconst isHeightPass = ({ percentageDeltaY }) => percentageDeltaY > 50;\nconst setPosYFromPos = state => assoc('posY', state.pos, state);\nconst getIndexTransformer = ifElse(\n  anyPass([isVelocityPass, isHeightPass]),\n  cond([\n    [propEq('dir', 'Up'), always(inc)],\n    [propEq('dir', 'Down'), always(dec)],\n    [T, always(identity)]\n  ]),\n  always(identity)\n);\nclass Slider extends React.PureComponent {\n  state = {\n    pos: 0,\n    posY: 0,\n    index: 0,\n    indexStart: 0,\n    indexEnd: 0,\n    onTransition: false\n  };\n\n  // これは static method のため、メソッド内で this.props.hoge !== nextProps.hoge のような比較処理は行えません。\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const [beforeLen, afterLen] = getChildrenBounding(nextProps);\n    const indexStart = nextProps.index - beforeLen;\n    const indexEnd = nextProps.index + afterLen;\n\n    if (\n      prevState.indexStart !== indexStart ||\n      prevState.indexEnd !== indexEnd\n    ) {\n      return {\n        indexStart,\n        indexEnd\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.index !== prevProps.index) {\n      const { indexStart } = this.state;\n      const nextStateIdx = this.props.index - indexStart;\n      this.setState({ index: nextStateIdx });\n    }\n\n    if (this.state.index !== prevState.index) {\n      this.updatePosition(this.state.index);\n    }\n  }\n\n  updatePosition = index => {\n    this.setState({ pos: index * -100, posY: index * -100 });\n  };\n\n  handleSwiping = data => {\n    this.props.onSwitching(true);\n\n    if (this.state.index === 0 && data.dir === 'Down') {\n      return;\n    }\n\n    if (\n      this.state.index === this.state.indexEnd - this.state.indexStart - 1 &&\n      data.dir === 'Up'\n    ) {\n      return;\n    }\n\n    const percentageDeltaY = calculatePercentage(\n      data.deltaY,\n      this.swipeable.clientHeight\n    );\n\n    this.setState(state => ({ posY: state.pos - percentageDeltaY }));\n  };\n\n  handleSwiped = data => {\n    const { dir } = data;\n    this.props.onSwitching(false);\n\n    if (this.state.index === 0 && dir === 'Down') {\n      return this.setState(state => ({ posY: state.pos }));\n    }\n\n    if (\n      this.state.index === this.state.indexEnd - this.state.indexStart - 1 &&\n      dir === 'Up'\n    ) {\n      return this.setState(state => ({ posY: state.pos }));\n    }\n\n    const percentageDeltaY = calculatePercentage(\n      data.absY,\n      this.swipeable.clientHeight\n    );\n\n    const transformer = getIndexTransformer({ ...data, percentageDeltaY });\n\n    const transform = evolve({\n      index: transformer,\n      onTransition: T\n    });\n\n    const setNextState = compose(\n      setPosYFromPos,\n      transform\n    );\n\n    this.setState(setNextState);\n  };\n\n  handleTransitionEnd = () => {\n    const { index, indexStart } = this.state;\n    this.setState({ onTransition: false });\n    this.props.onTransitionEnd();\n    this.props.onChangeIndex(indexStart + index);\n  };\n\n  getContainerStyle(posY, hasTransition = false) {\n    const transform = `translate(0, ${posY}%)`;\n\n    if (hasTransition) {\n      return {\n        transform,\n        transition: `transform 0.3s cubic-bezier(0.15, 0.3, 0.25, 1)`\n      };\n    }\n\n    return { transform };\n  }\n\n  render() {\n    const { posY, onTransition, indexStart, indexEnd } = this.state;\n    const style = this.getContainerStyle(posY, onTransition);\n\n    const children = React.Children.toArray(this.props.children);\n    const list = children.slice(indexStart, indexEnd);\n\n    return (\n      <Swipeable\n        innerRef={ref => (this.swipeable = ref)}\n        className={styles['base']}\n        onSwiped={this.handleSwiped}\n        onSwiping={this.handleSwiping}\n      >\n        <div\n          className={styles['slider-container']}\n          style={style}\n          onTransitionEnd={this.handleTransitionEnd}\n        >\n          {list}\n        </div>\n      </Swipeable>\n    );\n  }\n}\n\nSlider.defaultProps = {\n  index: 0,\n  before: 2,\n  after: 3,\n  onSwitching: () => null,\n  onChangeIndex: () => null,\n  onTransitionEnd: () => null\n};\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Card from '../components/Card';\nimport Slider from '../components/Slider';\n\nconst data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nclass App extends Component {\n  state = {\n    index: 0\n  };\n\n  handleChange = nextIdx => {\n    console.log('onChangeIndex', nextIdx);\n    this.setState(state => ({ index: nextIdx }));\n  };\n\n  renderCard = (val, idx) => {\n    return <Card key={idx} id={idx} />;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Use <span>react-swipeable</span> build the recycle slider\n          </p>\n          <Slider index={this.state.index} onChangeIndex={this.handleChange}>\n            {data.map(this.renderCard)}\n          </Slider>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}