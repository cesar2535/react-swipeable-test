{"version":3,"sources":["components/Card.module.scss","components/Card.js","components/Slider.js","layouts/App.js","serviceWorker.js","index.js","components/Slider.module.scss"],"names":["module","exports","base","Card","_ref","id","react_default","a","createElement","className","styles","calculatePercentage","numerator","denominator","Slider","state","pos","posY","index","indexStart","indexEnd","onTransition","updatePosition","_this","setState","handleSwiping","data","dir","percentageDeltaY","deltaY","swipeable","clientHeight","handleSwiped","velocity","nextIdx","absY","console","log","Object","objectSpread","handleTransitionEnd","_this$state","props","onTransitionEnd","onChangeIndex","prevProps","prevState","this","nextStateIdx","_this2","_this$state2","style","transform","concat","transition","list","React","Children","toArray","children","slice","es","innerRef","ref","onSwiped","onSwiping","nextProps","beforeLen","start","before","getBoundingStart","afterLen","after","len","count","end","getBoundingEnd","Component","defaultProps","App","handleChange","renderCard","val","idx","components_Card","key","components_Slider","map","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_layouts_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","slider-container"],"mappings":"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","file":"static/js/main.809592c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Card_base__3zfsh\"};","import React from 'react';\nimport styles from './Card.module.scss';\n\nconst Card = ({ id }) => {\n  return <div className={styles['base']}>Card {id}</div>;\n};\n\nexport default Card;\n","import React from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport styles from './Slider.module.scss';\n\nconst calculatePercentage = (numerator, denominator) =>\n  (numerator / denominator) * 100;\n\nconst getBoundingStart = props => {\n  const { index, before } = props;\n  let start = before;\n\n  while (start > index) {\n    start = start - 1;\n  }\n\n  return start;\n};\n\nconst getBoundingEnd = props => {\n  const { index, after, children } = props;\n  const len = React.Children.count(children);\n  let end = after;\n\n  while (index + end > len) {\n    end--;\n  }\n\n  return end;\n};\n\nclass Slider extends React.Component {\n  state = {\n    pos: 0,\n    posY: 0,\n    index: 0,\n    indexStart: 0,\n    indexEnd: 0,\n    onTransition: false\n  };\n\n  // これは static method のため、メソッド内で this.props.hoge !== nextProps.hoge のような比較処理は行えません。\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const beforeLen = getBoundingStart(nextProps);\n    const afterLen = getBoundingEnd(nextProps);\n    const indexStart = nextProps.index - beforeLen;\n    const indexEnd = nextProps.index + afterLen;\n\n    console.log('getDerived indexStart', indexStart);\n    console.log('getDerived indexEnd', indexEnd);\n    console.log('getDerived propsIdx', nextProps.index);\n    console.log('getDerived stateId', prevState.index);\n    if (\n      prevState.indexStart !== indexStart ||\n      prevState.indexEnd !== indexEnd\n    ) {\n      return {\n        indexStart,\n        indexEnd\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.index !== prevProps.index) {\n      const { indexStart } = this.state;\n      const nextStateIdx = this.props.index - indexStart;\n      this.setState({ index: nextStateIdx });\n    }\n\n    if (this.state.index !== prevState.index) {\n      console.log('update position', this.state.index);\n      this.updatePosition(this.state.index);\n    }\n  }\n\n  updatePosition = index => {\n    this.setState({ pos: index * -100, posY: index * -100 });\n  };\n\n  handleSwiping = data => {\n    if (this.state.index === 0 && data.dir === 'Down') {\n      return;\n    }\n\n    if (\n      this.state.index === this.state.indexEnd - this.state.indexStart - 1 &&\n      data.dir === 'Up'\n    ) {\n      return;\n    }\n\n    const percentageDeltaY = calculatePercentage(\n      data.deltaY,\n      this.swipeable.clientHeight\n    );\n\n    this.setState(state => ({ posY: state.pos - percentageDeltaY }));\n  };\n\n  handleSwiped = data => {\n    const { velocity, dir } = data;\n    if (this.state.index === 0 && dir === 'Down') {\n      return this.setState(state => ({ posY: state.pos }));\n    }\n\n    if (\n      this.state.index === this.state.indexEnd - this.state.indexStart - 1 &&\n      dir === 'Up'\n    ) {\n      return this.setState(state => ({ posY: state.pos }));\n    }\n\n    this.setState(state => {\n      let nextIdx = state.index;\n      const newState = { onTransition: true };\n      const percentageDeltaY = calculatePercentage(\n        data.absY,\n        this.swipeable.clientHeight\n      );\n      if (velocity > 0.5 || percentageDeltaY > 50) {\n        console.log('swiped', dir);\n\n        if (dir === 'Up') {\n          nextIdx = state.index + 1;\n        } else if (dir === 'Down') {\n          nextIdx = state.index - 1;\n        }\n      }\n      return { ...newState, posY: state.pos, index: nextIdx };\n    });\n  };\n\n  handleTransitionEnd = () => {\n    const { index, indexStart } = this.state;\n    console.log('onTransitionEnd propsIndex', this.props.index);\n    console.log('onTransitionEnd indexStart', indexStart);\n    console.log('onTransitionEnd stateIndex', index);\n    this.setState({ onTransition: false });\n    this.props.onTransitionEnd();\n    this.props.onChangeIndex(indexStart + index);\n  };\n\n  render() {\n    const { posY, onTransition, indexStart, indexEnd } = this.state;\n    let style = {};\n\n    if (onTransition) {\n      style = {\n        transform: `translate(0, ${posY}%)`,\n        transition: `transform 0.3s cubic-bezier(0.15, 0.3, 0.25, 1)`\n      };\n    } else {\n      style = {\n        transform: `translate(0, ${posY}%)`\n      };\n    }\n\n    const children = React.Children.toArray(this.props.children);\n    const list = children.slice(indexStart, indexEnd);\n    console.log('props index @render', this.props.index);\n    console.log(indexStart, indexEnd);\n\n    return (\n      <Swipeable\n        innerRef={ref => (this.swipeable = ref)}\n        className={styles['base']}\n        onSwiped={this.handleSwiped}\n        onSwiping={this.handleSwiping}\n      >\n        <div\n          className={styles['slider-container']}\n          style={style}\n          onTransitionEnd={this.handleTransitionEnd}\n        >\n          {list}\n        </div>\n      </Swipeable>\n    );\n  }\n}\n\nSlider.defaultProps = {\n  index: 0,\n  before: 2,\n  after: 3,\n  onChangeIndex: () => null,\n  onTransitionEnd: () => null\n};\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Card from '../components/Card';\nimport Slider from '../components/Slider';\n\nconst data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nclass App extends Component {\n  state = {\n    index: 0\n  };\n\n  handleChange = nextIdx => {\n    console.log('onChangeIndex', nextIdx);\n    this.setState(state => ({ index: nextIdx }));\n  };\n\n  renderCard = (val, idx) => {\n    return <Card key={idx} id={idx} />;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Use <span>react-swipeable</span> build the recycle slider\n          </p>\n          <Slider index={this.state.index} onChangeIndex={this.handleChange}>\n            {data.map(this.renderCard)}\n          </Slider>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Slider_base___UUj9\",\"slider-container\":\"Slider_slider-container__2MvxT\"};"],"sourceRoot":""}